##---------------------------------------------------
# Automated documentation .gitignore files
##---------------------------------------------------

# Automatically generated API documentation stubs from sphinx-apidoc
docs/source/packages

# Automatically converting README from markdown to rST
docs/bin
docs/source/readme.rst


##---------------------------------------------------
# Continuous Integration .gitignore files
##---------------------------------------------------

# Ignore test result XML files
testresults.xml
coverage.xml


##---------------------------------------------------
# Python default .gitignore
##---------------------------------------------------

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that donâ€™t work, or not
#   install all needed dependencies.
#Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/


##---------------------------------------------------
# Windows default .gitignore
##---------------------------------------------------

# Windows thumbnail cache files
Thumbs.db
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk


##---------------------------------------------------
# Linux default .gitignore
##---------------------------------------------------

# Editor backup files
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*


##---------------------------------------------------
# Mac OSX default .gitignore
##---------------------------------------------------

# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk
/out/
/textbooks/
/data/
/week_1/t1_exploratory_data_analysis/welcome to week 1.mp4
/week_1/t3_estimation_of_vector_mean_and_of_variance_matrices_point_estimates/Maximum Likelihood estimation - an introduction part 1.mp4
/week_1/t2_the_multivariate_distribution/multivariate_normal_distribution.mp4
/week_1/t4_confidence_intervals_and_hypothesis_tests_for_the_mean_vector/hotellings_example.mp4
/week_1/Multivariable functions  Multivariable calculus  Khan Academy.mp4
/week_2/t1_partial_correlations/partial correlation.mp4
/week_2/t1_partial_correlations/welcome to week 2.mp4
/week_2/t2_multiple_correlation_coefficients/total correlation.mp4
/week_2/t1_partial_correlations/Partial Correlation Practice Problem.mp4
/week_2/t3_testing_correlation_coefficients/correlation_tests.mp4
/week_2/t4_principle_component_analysis/pca.mp4
/week_3/t1_connonical_correlations/cannonical correlation.mp4
/week_3/t1_connonical_correlations/intro_to_week_3.mp4
/week_3/t3_multivariate_anova_testing_cannonical_correlations_and_multivariate_response/25 MANOVA.mp4
/week_3/t3_multivariate_anova_testing_cannonical_correlations_and_multivariate_response/multivariate_linear_models_and_manova.mp4
/week_6/t2_copula/Gaussian copula.mp4
/week_4/t4_overview_of_structural_equation_models/Developing and Comparing Structural Equation Models (SEM) in R using lavaan.mp4
/week_4/t3_estimating_and_testing_factor_analysis_models/Principal Component Analysis and Factor Analysis in R.mp4
/week_4/t3_estimating_and_testing_factor_analysis_models/Factor Analysis - an introduction.mp4
/week_4/t2_factor_aanalysis_concepts_and_interpretation/Factor Analysis - an introduction.mp4
/week_4/t1_deriving_likelihood_ratio_tests_for_covariance_matrix_under_the_normal_assumption/week 4.mp4
/week_6/t1_clustering/cluster_analysis.mp4
/week_6/t1_clustering/intro to week 6.mp4
/week_5/t5_tuning_support_vector_machines/SUPPORT VECTOR MACHINES.mp4
/week_5/t3_quadratic_discriminant_analysis/discriminant analysis.mp4
/week_5/t1_concepts_of_classification/intro to week 5.mp4
/week_4/structural equation modeling.mp4
/week_4/factor_analysis.mp4
/week_6/t2_copula/copula methods.mp4
